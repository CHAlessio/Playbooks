---
- name: Install and configure Splunk Universal Forwarder
  hosts: agents
  become: yes

  vars:
    forwarder_version: "9.4.1"
    forwarder_build: "e3bdab203ac8"
    splunk_server_ip: "172.16.2.80"
    splunk_server_port: 9997
    splunk_admin_user: admin
    splunk_admin_password: "{{ lookup('env', 'SPLUNK_PASSWORD') }}"
    splunk_install_dir: /opt
    splunk_home: "{{ splunk_install_dir }}/splunkforwarder"
    splunk_filename: "splunkforwarder-{{ forwarder_version }}-{{ forwarder_build }}-linux-amd64.tgz"
    splunk_download_path: "/tmp/{{ splunk_filename }}"
    splunk_url: "https://download.splunk.com/products/universalforwarder/releases/{{ forwarder_version }}/linux/{{ splunk_filename }}"
    log_index: "debian_logs"

  tasks:

    - name: Ensure password env var is set
      fail:
        msg: "Environment variable SPLUNK_PASSWORD is not set!"
      when: splunk_admin_password == ""

    - name: Check if Splunk Forwarder is already installed
      stat:
        path: "{{ splunk_home }}/bin/splunk"
      register: splunk_forwarder_installed

    - name: Try to download Splunk Forwarder (preferred method)
      get_url:
        url: "{{ splunk_url }}"
        dest: "{{ splunk_download_path }}"
        mode: '0644'
        validate_certs: no
      register: download_result
      failed_when: false
      when: not splunk_forwarder_installed.stat.exists

    - name: Fallback - Download Splunk Forwarder via curl if get_url failed
      shell: "curl -fSL '{{ splunk_url }}' -o '{{ splunk_download_path }}'"
      args:
        creates: "{{ splunk_download_path }}"
      when: not splunk_forwarder_installed.stat.exists and (download_result.failed | default(false))

    - name: Check if the tarball exists
      stat:
        path: "{{ splunk_download_path }}"
      register: splunk_tgz

    - name: Fail if Splunk tarball is still missing
      fail:
        msg: "Download failed: Splunk Forwarder archive not found at {{ splunk_download_path }}"
      when: not splunk_tgz.stat.exists

    - name: Extract Splunk Forwarder
      unarchive:
        src: "{{ splunk_download_path }}"
        dest: "{{ splunk_install_dir }}"
        remote_src: yes
      when: not splunk_forwarder_installed.stat.exists

    - name: Create user-seed.conf to preset admin credentials
      copy:
        dest: "{{ splunk_home }}/etc/system/local/user-seed.conf"
        content: |
          [user_info]
          USERNAME = {{ splunk_admin_user }}
          PASSWORD = {{ splunk_admin_password }}
        mode: '0600'
      when: not splunk_forwarder_installed.stat.exists

    - name: Accept license and do first start
      command: "{{ splunk_home }}/bin/splunk start --accept-license"
      args:
        creates: "{{ splunk_home }}/ftr"
      when: not splunk_forwarder_installed.stat.exists

    - name: Check if SplunkForwarder systemd unit file exists
      stat:
        path: /etc/systemd/system/SplunkForwarder.service
      register: unit_file_check

    - name: Disable existing boot-start if systemd unit already exists
      command: "{{ splunk_home }}/bin/splunk disable boot-start"
      when: unit_file_check.stat.exists

    - name: Enable Splunk boot-start via systemd (as root)
      command: "{{ splunk_home }}/bin/splunk enable boot-start --accept-license -user root"

    - name: Ensure SplunkForwarder systemd service is enabled and started
      systemd:
        name: SplunkForwarder
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Add Splunk Indexer as forward target
      command: >
        {{ splunk_home }}/bin/splunk add forward-server {{ splunk_server_ip }}:{{ splunk_server_port }}
        -auth {{ splunk_admin_user }}:{{ splunk_admin_password }}
      when: not splunk_forwarder_installed.stat.exists

    - name: Monitor system logs
      command: >
        {{ splunk_home }}/bin/splunk add monitor /var/log
        -index {{ log_index }}
        -auth {{ splunk_admin_user }}:{{ splunk_admin_password }}
      when: not splunk_forwarder_installed.stat.exists
